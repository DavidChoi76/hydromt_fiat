from census import Census
from us import states
import pandas as pd


class SocialVulnerabilityIndex:

    def get_svi_data(self):
        c = Census("495a349ce22bdb1294b378fb199e4f27e57471a9")
        census    = c.acs.state_county_blockgroup(fields = ('NAME','B01001_027E', 'B01001_003E', 'B01001_001E' ), state_fips = states.SC.fips, county_fips="*", tract = "*", blockgroup = "*")
        df_census = pd.DataFrame(census)
        df_census.rename(columns={"B01001_027E": "FiveYearsAgeFemBG", "B01001_003E": "FiveYearsAgeMaleBG", "B01001_001E" : "TotalPopulationBG"}, inplace=True)
        return df_census


    def preprocessing_svi_data(self):
        pass

    def normalization_svi_data(self, df):

        vulnerability_features = ["FiveYearsAgeFemBG", "FiveYearsAgeMaleBG", "TotalPopulationBG"]
        census_Data      = df.copy()
        svi_fiat         = pd.DataFrame()
        svi_fiat['NAME'] = census_Data['NAME']
        svi_fiat_names   = []

        for column in vulnerability_features:
            svi_fiat[column+ '_norm'] = self.minmax_normalize(df[column])
            svi_fiat_names.append(column + '_norm')
            #svi[column+'_score']       = zscore(svi[column])
            #svi[column+'_maxmin_norm'] = maxmin_normalize(svi[column]).multiply(-1)
        
        return svi_fiat, svi_fiat_names

    def scores_by_cathegory(self):
        pass


    #General functions used in SocialVulnerabilityIndex()
    def zscore(self, column):
        return (column - column.mean()) / column.std()

    def minmax_normalize(self, column):
        return (column - column.min()) / (column.max() - column.min())

    def maxmin_normalize(self, column):
        return (column - column.max()) / (column.max() - column.min())



