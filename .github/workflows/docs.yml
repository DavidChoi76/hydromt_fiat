name: Build Documentation

on:
  workflow_dispatch:
  push:
    branches: [ main, docs ]
    paths:
      - tests/*
      - hydromt_fiat/*
      - docs/*
      - examples/*
      - pyproject.toml
  pull_request:
    branches: [ main, docs ]
    paths:
      - tests/*
      - hydromt_fiat/*
      - docs/*
      - examples/*
      - pyproject.toml

jobs:
  # Build docs on Linux
  Docs:
    name: linux docs
    runs-on: ubuntu-latest
    env:
      DOC_VERSION: dev
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: "3.10"
          miniforge-variant: Mambaforge
          miniforge-version: latest
          channels: conda-forge
          activate-environment: hydromt-fiat-docs
          use-mamba: true

      # - name: load from cache
      #   id: cache
      #   uses: actions/cache/restore@v3
      #   with:
      #     path: |
      #       /usr/share/miniconda3
      #       ~/pycache
      #       ./docs/_build
      #     # the below two settings mean we'll alway srestore the cache
      #     # but the cache hit output can tell us if we have to update afterwards
      #     key: docs-${{ hashFiles('envs/hydromt-fiat-docs.yml')  }}
      #     restore-keys: |
      #       docs

      # - name: Fail on no cache restore
      #   if: steps.cache.outputs.cache-matched-key == ''
      #   run: |
      #     echo "Failed to restore any cache. exiting..."
      #     exit 1

      # # by avoiding the mamba setup stage by loading it from cache instead we save
      # # a lot of setup time, but we do have to do our own PATH management
      # # hence the exports
      # - name: Update environment
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: |
      #     export PATH=/usr/share/miniconda3/bin:$PATH
      #     mamba env update -n hydromt-fiat-docs -f envs/hydromt-fiat-docs.yml

      - name: Install environment
        run: mamba env update -n hydromt-fiat-docs -f envs/hydromt-fiat-docs.yml

      - name: Install hydromt-fiat
        run: pip install .

      - name: Generate docs
        if: ${{ github.event_name != 'pull_request' && !github.event.act }}
        run: |
          export PATH=/usr/share/miniconda3/bin:$PATH
          PYTHONPYCACHEPREFIX=~/pycache mamba run -n hydromt-fiat-docs sphinx-build -M html ./docs ./docs/_build
          echo "DOC_VERSION=$(mamba run -n hydromt-fiat-docs python -c 'from hydromt_fiat import __version__ as v; print("dev" if "dev" in v else "v"+v.replace(".dev",""))')" >> $GITHUB_ENV

      - name: Upload to GitHub Pages
        if: ${{ github.event_name != 'pull_request' && !github.event.act }}
        uses: peaceiris/actions-gh-pages@v3.9.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/_build/html
          exclude_assets: .buildinfo,_sources/*,_examples/*.ipynb
          destination_dir: ./${{ env.DOC_VERSION }}
          keep_files: false
          full_commit_message: Deploy ${{ env.DOC_VERSION }} to GitHub Pages
